// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.OperationsHistory.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CashOutHistoryOperation
    {
        /// <summary>
        /// Initializes a new instance of the CashOutHistoryOperation class.
        /// </summary>
        public CashOutHistoryOperation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CashOutHistoryOperation class.
        /// </summary>
        /// <param name="cashOutState">Possible values include: 'Regular',
        /// 'Request', 'Done', 'Cancelled'</param>
        /// <param name="state">Possible values include: 'InProcessOnchain',
        /// 'SettledOnchain', 'InProcessOffchain', 'SettledOffchain',
        /// 'SettledNoChain'</param>
        public CashOutHistoryOperation(CashOutState cashOutState, double amount, bool isRefund, bool isSettled, TransactionStates state, string id = default(string), string dateTime = default(string), string asset = default(string), string blockChainHash = default(string), string addressFrom = default(string), string addressTo = default(string), string type = default(string), string contextOperationType = default(string))
        {
            CashOutState = cashOutState;
            Id = id;
            Amount = amount;
            DateTime = dateTime;
            Asset = asset;
            BlockChainHash = blockChainHash;
            IsRefund = isRefund;
            AddressFrom = addressFrom;
            AddressTo = addressTo;
            IsSettled = isSettled;
            Type = type;
            ContextOperationType = contextOperationType;
            State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Regular', 'Request', 'Done',
        /// 'Cancelled'
        /// </summary>
        [JsonProperty(PropertyName = "CashOutState")]
        public CashOutState CashOutState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Amount")]
        public double Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateTime")]
        public string DateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Asset")]
        public string Asset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockChainHash")]
        public string BlockChainHash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsRefund")]
        public bool IsRefund { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AddressFrom")]
        public string AddressFrom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AddressTo")]
        public string AddressTo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsSettled")]
        public bool IsSettled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContextOperationType")]
        public string ContextOperationType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'InProcessOnchain',
        /// 'SettledOnchain', 'InProcessOffchain', 'SettledOffchain',
        /// 'SettledNoChain'
        /// </summary>
        [JsonProperty(PropertyName = "State")]
        public TransactionStates State { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
